import { useState, useEffect } from 'react'
import { Box, Card, Typography, Stack, Switch, FormControlLabel, TextField, Button, alpha, Chip } from '@mui/material'
import { Notifications, Schedule, NotificationsActive } from '@mui/icons-material'
import { requestNotificationPermission, scheduleNotifications, cancelNotifications } from '../utils/notifications'

export default function ReminderSettings() {
  const [enabled, setEnabled] = useState(() => {
    return localStorage.getItem('reminders_enabled') === 'true'
  })
  
  const [time, setTime] = useState(() => {
    return localStorage.getItem('reminder_time') || '20:00'
  })

  const [permission, setPermission] = useState<'granted' | 'denied' | 'default'>('default')

  useEffect(() => {
    if ('Notification' in window) {
      setPermission(Notification.permission)
    }
  }, [])

  const handleEnableReminders = async (checked: boolean) => {
    if (checked) {
      const hasPermission = await requestNotificationPermission()
      if (hasPermission) {
        setEnabled(true)
        localStorage.setItem('reminders_enabled', 'true')
        setPermission('granted')
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        scheduleNotifications()
      } else {
        alert('–î–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –Ω—É–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞')
      }
    } else {
      setEnabled(false)
      localStorage.setItem('reminders_enabled', 'false')
      cancelNotifications()
    }
  }

  const handleTimeChange = (newTime: string) => {
    setTime(newTime)
    localStorage.setItem('reminder_time', newTime)
    // –ü–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    if (enabled && permission === 'granted') {
      cancelNotifications()
      scheduleNotifications()
    }
  }

  const testNotification = () => {
    if (Notification.permission === 'granted') {
      new Notification('üîî –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', {
        body: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!',
        icon: '/icon-192.png'
      })
    }
  }

  return (
    <Box>
      <Stack direction="row" alignItems="center" spacing={2} mb={3}>
        <NotificationsActive sx={{ color: '#667eea', fontSize: 32 }} />
        <Box>
          <Typography variant="h5" fontWeight={700}>
            –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
          </Typography>
          <Typography variant="caption" color="text.secondary">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π
          </Typography>
        </Box>
      </Stack>

      <Stack spacing={3}>
        {/* –û—Å–Ω–æ–≤–Ω–æ–π —Å–≤–∏—Ç—á */}
        <Card sx={{ p: 3 }}>
          <FormControlLabel
            control={
              <Switch
                checked={enabled}
                onChange={(e) => handleEnableReminders(e.target.checked)}
                sx={{
                  '& .MuiSwitch-switchBase.Mui-checked': {
                    color: '#667eea',
                  },
                  '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {
                    backgroundColor: '#667eea',
                  },
                }}
              />
            }
            label={
              <Stack>
                <Typography variant="body1" fontWeight={600}>
                  –í–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                </Typography>
                <Typography variant="caption" color="text.secondary">
                  –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏
                </Typography>
              </Stack>
            }
          />
        </Card>

        {/* –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è */}
        {enabled && (
          <Card sx={{ p: 3 }}>
            <Stack spacing={2}>
              <Stack direction="row" alignItems="center" spacing={1}>
                <Schedule sx={{ color: 'text.secondary' }} />
                <Typography variant="body1" fontWeight={600}>
                  –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                </Typography>
              </Stack>
              
              <TextField
                type="time"
                value={time}
                onChange={(e) => handleTimeChange(e.target.value)}
                fullWidth
                sx={{
                  '& .MuiInputBase-root': {
                    borderRadius: 2
                  }
                }}
              />

              <Typography variant="caption" color="text.secondary">
                –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ {time}
              </Typography>
            </Stack>
          </Card>
        )}

        {/* –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π */}
        <Card 
          sx={{ 
            p: 3,
            background: permission === 'granted' 
              ? alpha('#4caf50', 0.1) 
              : permission === 'denied'
              ? alpha('#f44336', 0.1)
              : alpha('#ff9800', 0.1)
          }}
        >
          <Stack spacing={2}>
            <Stack direction="row" alignItems="center" spacing={1}>
              <Notifications sx={{ 
                color: permission === 'granted' ? '#4caf50' : permission === 'denied' ? '#f44336' : '#ff9800'
              }} />
              <Typography variant="body1" fontWeight={600}>
                –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
              </Typography>
            </Stack>

            <Stack direction="row" spacing={1} alignItems="center">
              <Chip
                label={
                  permission === 'granted' 
                    ? '‚úì –†–∞–∑—Ä–µ—à–µ–Ω–æ' 
                    : permission === 'denied'
                    ? '‚úó –ó–∞–ø—Ä–µ—â–µ–Ω–æ'
                    : '‚ö† –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'
                }
                color={
                  permission === 'granted' 
                    ? 'success' 
                    : permission === 'denied'
                    ? 'error'
                    : 'warning'
                }
                size="small"
              />
            </Stack>

            {permission === 'denied' && (
              <Typography variant="caption" color="error">
                –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∏—Ö –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞.
              </Typography>
            )}

            {permission === 'granted' && (
              <Button
                variant="outlined"
                size="small"
                onClick={testNotification}
                sx={{ alignSelf: 'flex-start' }}
              >
                –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
              </Button>
            )}
          </Stack>
        </Card>

        {/* –¢–∏–ø—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π */}
        {enabled && (
          <Card sx={{ p: 3 }}>
            <Typography variant="body1" fontWeight={600} mb={2}>
              –ß—Ç–æ –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å:
            </Typography>
            
            <Stack spacing={1.5}>
              <Stack direction="row" alignItems="center" spacing={1}>
                <Typography variant="body2">üìù</Typography>
                <Typography variant="body2">–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ –¥–µ–Ω—å</Typography>
              </Stack>
              <Stack direction="row" alignItems="center" spacing={1}>
                <Typography variant="body2">üéØ</Typography>
                <Typography variant="body2">–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏</Typography>
              </Stack>
              <Stack direction="row" alignItems="center" spacing={1}>
                <Typography variant="body2">üìä</Typography>
                <Typography variant="body2">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)</Typography>
              </Stack>
              <Stack direction="row" alignItems="center" spacing={1}>
                <Typography variant="body2">‚≠ê</Typography>
                <Typography variant="body2">–ù–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</Typography>
              </Stack>
            </Stack>
          </Card>
        )}
      </Stack>
    </Box>
  )
}
