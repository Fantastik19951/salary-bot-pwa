// Smart —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

export const requestNotificationPermission = async (): Promise<boolean> => {
  if (!('Notification' in window)) {
    console.log('This browser does not support notifications')
    return false
  }

  if (Notification.permission === 'granted') {
    return true
  }

  if (Notification.permission !== 'denied') {
    try {
      const permission = await Notification.requestPermission()
      if (permission === 'granted') {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        sendNotification('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã', {
          body: '–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è',
          tag: 'welcome'
        })
        return true
      }
    } catch (error) {
      console.error('Error requesting notification permission:', error)
    }
  }

  return false
}

export const sendNotification = (title: string, options?: NotificationOptions) => {
  if (Notification.permission === 'granted') {
    new Notification(title, {
      icon: '/icon-192.png',
      badge: '/icon-192.png',
      ...options
    })
  }
}

// –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export const smartNotifications = {
  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
  dailyReminder: () => {
    const lastEntry = localStorage.getItem('last_entry_date')
    const today = new Date().toISOString().split('T')[0]
    
    if (lastEntry !== today) {
      sendNotification('üìù –ü–æ—Ä–∞ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å', {
        body: '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è',
        tag: 'daily-reminder'
      })
    }
  },

  // –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏
  goalAchieved: (percentage: number) => {
    if (percentage >= 80 && percentage < 100) {
      sendNotification('üéØ –ü–æ—á—Ç–∏ —É —Ü–µ–ª–∏!', {
        body: `–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ ${percentage}% –æ—Ç —Ü–µ–ª–∏ –º–µ—Å—è—Ü–∞`,
        tag: 'goal-progress'
      })
    } else if (percentage >= 100) {
      sendNotification('üéâ –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!', {
        body: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Ü–µ–ª—å –º–µ—Å—è—Ü–∞',
        tag: 'goal-achieved'
      })
    }
  },

  // –ù–æ–≤—ã–π –¢–û–ü –∫–ª–∏–µ–Ω—Ç
  topClient: (clientName: string, amount: number) => {
    sendNotification('‚≠ê –ù–æ–≤—ã–π –¢–û–ü –∫–ª–∏–µ–Ω—Ç!', {
      body: `${clientName}: ${amount.toLocaleString()} $`,
      tag: 'top-client'
    })
  },

  // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
  weeklyReport: (revenue: number, change: number) => {
    const emoji = change > 0 ? 'üìà' : change < 0 ? 'üìâ' : '‚û°Ô∏è'
    const changeText = change > 0 ? `+${change}%` : `${change}%`
    
    sendNotification(`${emoji} –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç`, {
      body: `–û–±–æ—Ä–æ—Ç: ${revenue.toLocaleString()} $ (${changeText})`,
      tag: 'weekly-report'
    })
  }
}

// –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
export const scheduleNotifications = () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
  if (Notification.permission !== 'granted') {
    console.log('Notifications not granted')
    return
  }

  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
  const scheduleDaily = () => {
    const reminderTime = localStorage.getItem('reminder_time') || '20:00'
    const [hours, minutes] = reminderTime.split(':').map(Number)
    
    const now = new Date()
    const reminder = new Date()
    reminder.setHours(hours, minutes, 0, 0)
    
    if (now > reminder) {
      reminder.setDate(reminder.getDate() + 1)
    }
    
    const timeUntilReminder = reminder.getTime() - now.getTime()
    
    console.log(`Next reminder in ${Math.round(timeUntilReminder / 1000 / 60)} minutes`)
    
    setTimeout(() => {
      smartNotifications.dailyReminder()
      // –ü–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä—É–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
      scheduleDaily()
    }, timeUntilReminder)
  }
  
  scheduleDaily()
}

// –û—Ç–º–µ–Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
export const cancelNotifications = () => {
  // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö timeout–æ–≤ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
  console.log('Notifications cancelled')
}
